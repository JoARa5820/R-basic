[182]
noise.txt 데이터를 시각화 하세요.

[Answer]
noise <- readLines("c:/data/noise.txt")
noise
noise[2]

for(i in 1:5){
  noise[[i]] <- strsplit(noise[[i]],split=" ")
}

noise
noise <- unlist(noise)
noise
class(noise)

noise <- as.numeric(noise)
class(noise)
noise

sort(noise,decreasing=F)

a<-0
b<-0
c<-0
d<-0


for(i in 1:length(noise)){
if(noise[i]>=40 & noise[i]<50){ a <- a+1
} else if(noise[i]>=50  &  noise[i]<60){ b <- b+1
} else if(noise[i]>=60  &  noise[i]<70){ c <- c+1
} else if(noise[i]>=70  &  noise[i]<80){ d <- d+1
}
}

a
b
c
d


dosu <- c(a,b,c,d,length(noise))
nudosu <- c(a,b,c,d,length(noise))
dosu
nudosu
length(dosu)

for(i in 1:length(nudosu)){
  if(i==1){
    nudosu[i]
  } else if(i==length(nudosu)){
    nudosu[i] <- NA
  } else {
    nudosu[i] <- nudosu[i-1]+nudosu[i] 
  }
}
nudosu

data.frame(계급=c('40점이상~50점미만','50점이상~60점미만','60점이상~70점미만','70점이상~80점미만','전체'),
             도수=dosu,
             상대도수=dosu/length(noise),
             누적도수=nudosu)



# cut 메소드 쓰기(연속형 자료를 범주형으로 바꿈)=> table로 빈도수 체크


또는

noise <- read.table("c:/data/noise.txt")

noise <- as.matrix(noise)

dim(noise) <- c(50,1)

noise <- as.vector(noise)

noise <- sort(noise)

min(noise); max(noise)

# right=FALSE: 40<= x <50 라는 뜻 [40,50)
# right=TRUE:  40< x <=50 라는 뜻 (40,50]
noise_cut <- cut(noise,breaks=seq(40,80,by=10),right=FALSE,labels=c('40점이상~50점미만','50점이상~60점미만','60점이상~70점미만','70점이상~80점미만'))

table(noise_cut)

hist(noise,breaks=seq(40,80,by=10),right=FALSE,col=rainbow(6),labels=TRUE)







[183]
noise.txt 데이터에서 25%의 기준 데이터 75%의 기준 데이터를 찾으세요.

[Answer]
> noise[50*0.25]
[1] 56.4

> noise[50*0.75]
[1] 63.8







[184]
noise.txt 데이터에서 중위수 데이터를 찾으세요.

[Answer]
# 중위수 구하기

# 홀수일 때
> noise[length(noise)/2]
# 짝수일 때
> (noise[length(noise)/2] + noise[length(noise)/2 + 1])/2
[1] 61.2







[185]
boxplot 위에 값 찍기

[Answer]  
boxstate <- boxplot(noise,horizontal = T,col='orange')
boxstate

text(boxstate$out,rep(1,NROW(boxstate$stats)),labels=boxstate$out,pos=c(1.03,1.03,1.03),cex=0.6,col='red')
text(boxstate$stats,rep(1,NROW(boxstate$stats)),labels=boxstate$stats)

또는

boxplot(noise,horizontal = T,col='orange')

# 제1사분위수 출력
text(quantile(noise,0.25,type=2)+0.5,1,labels = quantile(noise,0.25,type=2),col='blue')

# 제2사분위수 출력
text(quantile(noise,0.50,type=2)+0.5,1,labels = quantile(noise,0.50,type=2),col='blue')

# 제3사분위수 출력
text(quantile(noise,0.75,type=2)+0.5,1,labels = quantile(noise,0.75,type=2),col='blue')


# 이상값이 없는 최대 범위 내에 최소값 출력(type=2로 해야 원하는 값 나옴/IQR이라는 메소드)
lf <- quantile(noise,0.25,type=2) -1.5 * IQR(noise,type=2)
uf <- quantile(noise,0.75,type=2) +1.5 * IQR(noise,type=2)

text(min(noise[noise>=lf & noise<=uf])+0.5,1,labels=min(noise[noise>= lf & noise <= uf]),col='blue')

# 이상값이 없는 최대 범위 내에 최대값 출력(type=2로 해야 원하는 값 나옴/IQR이라는 메소드)
text(max(noise[noise>=lf & noise<=uf])+0.5,1,labels=max(noise[noise>= lf & noise <= uf]),col='blue')


## 이상치 출력
#(1.03은 위치를 살짝 올린 것)
text(noise[noise<lf],1.03,labels = noise[noise<lf],col='red',cex=0.7)
text(noise[noise>uf],1.03,labels = noise[noise>uf],col='red',cex=0.7)
